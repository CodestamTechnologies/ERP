// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/ai-insights" | "/auth/forget-password" | "/auth/login" | "/auth/signup" | "/calendar" | "/customers" | "/dashboard" | "/finance" | "/finance/reports" | "/inventory" | "/reports" | "/sales" | "/sales/customers" | "/settings" | "/settings/domain" | "/suppliers" | "/todo" | "/tools/gmail" | "/tools/hubtrack" | "/tools/whatsapp"
type AppRouteHandlerRoutes = "/api/customers" | "/api/customers/[id]" | "/api/reports" | "/api/reports/[id]" | "/api/suppliers" | "/api/suppliers/[id]"
type PageRoutes = never
type LayoutRoutes = "/" | "/ai-insights" | "/calendar" | "/customers" | "/dashboard" | "/finance" | "/inventory" | "/reports" | "/sales" | "/settings" | "/suppliers" | "/todo" | "/tools" | "/tools/gmail" | "/tools/hubtrack" | "/tools/whatsapp"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/ai-insights": {}
  "/api/customers": {}
  "/api/customers/[id]": { "id": string; }
  "/api/reports": {}
  "/api/reports/[id]": { "id": string; }
  "/api/suppliers": {}
  "/api/suppliers/[id]": { "id": string; }
  "/auth/forget-password": {}
  "/auth/login": {}
  "/auth/signup": {}
  "/calendar": {}
  "/customers": {}
  "/dashboard": {}
  "/finance": {}
  "/finance/reports": {}
  "/inventory": {}
  "/reports": {}
  "/sales": {}
  "/sales/customers": {}
  "/settings": {}
  "/settings/domain": {}
  "/suppliers": {}
  "/todo": {}
  "/tools": {}
  "/tools/gmail": {}
  "/tools/hubtrack": {}
  "/tools/whatsapp": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/ai-insights": never
  "/calendar": never
  "/customers": never
  "/dashboard": never
  "/finance": never
  "/inventory": never
  "/reports": never
  "/sales": never
  "/settings": never
  "/suppliers": never
  "/todo": never
  "/tools": never
  "/tools/gmail": never
  "/tools/hubtrack": never
  "/tools/whatsapp": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
