// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
}


// Validate ..\..\src\app\(auth)\auth\forget-password\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\(auth)\\auth\\forget-password\\page.js")
  handler satisfies AppPageConfig<"/auth/forget-password">
}

// Validate ..\..\src\app\(auth)\auth\login\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\(auth)\\auth\\login\\page.js")
  handler satisfies AppPageConfig<"/auth/login">
}

// Validate ..\..\src\app\(auth)\auth\signup\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\(auth)\\auth\\signup\\page.js")
  handler satisfies AppPageConfig<"/auth/signup">
}

// Validate ..\..\src\app\ai-insights\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\ai-insights\\page.js")
  handler satisfies AppPageConfig<"/ai-insights">
}

// Validate ..\..\src\app\calendar\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\calendar\\page.js")
  handler satisfies AppPageConfig<"/calendar">
}

// Validate ..\..\src\app\customers\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\customers\\page.js")
  handler satisfies AppPageConfig<"/customers">
}

// Validate ..\..\src\app\dashboard\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\dashboard\\page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ..\..\src\app\finance\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\finance\\page.js")
  handler satisfies AppPageConfig<"/finance">
}

// Validate ..\..\src\app\finance\reports\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\finance\\reports\\page.js")
  handler satisfies AppPageConfig<"/finance/reports">
}

// Validate ..\..\src\app\inventory\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\inventory\\page.js")
  handler satisfies AppPageConfig<"/inventory">
}

// Validate ..\..\src\app\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ..\..\src\app\reports\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\reports\\page.js")
  handler satisfies AppPageConfig<"/reports">
}

// Validate ..\..\src\app\sales\customers\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\sales\\customers\\page.js")
  handler satisfies AppPageConfig<"/sales/customers">
}

// Validate ..\..\src\app\sales\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\sales\\page.js")
  handler satisfies AppPageConfig<"/sales">
}

// Validate ..\..\src\app\settings\domain\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\settings\\domain\\page.js")
  handler satisfies AppPageConfig<"/settings/domain">
}

// Validate ..\..\src\app\settings\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\settings\\page.js")
  handler satisfies AppPageConfig<"/settings">
}

// Validate ..\..\src\app\suppliers\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\suppliers\\page.js")
  handler satisfies AppPageConfig<"/suppliers">
}

// Validate ..\..\src\app\todo\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\todo\\page.js")
  handler satisfies AppPageConfig<"/todo">
}

// Validate ..\..\src\app\tools\gmail\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\tools\\gmail\\page.js")
  handler satisfies AppPageConfig<"/tools/gmail">
}

// Validate ..\..\src\app\tools\hubtrack\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\tools\\hubtrack\\page.js")
  handler satisfies AppPageConfig<"/tools/hubtrack">
}

// Validate ..\..\src\app\tools\whatsapp\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\tools\\whatsapp\\page.js")
  handler satisfies AppPageConfig<"/tools/whatsapp">
}

// Validate ..\..\src\app\api\customers\[id]\route.ts
{
  const handler = {} as typeof import("..\\..\\src\\app\\api\\customers\\[id]\\route.js")
  handler satisfies RouteHandlerConfig<"/api/customers/[id]">
}

// Validate ..\..\src\app\api\customers\route.ts
{
  const handler = {} as typeof import("..\\..\\src\\app\\api\\customers\\route.js")
  handler satisfies RouteHandlerConfig<"/api/customers">
}

// Validate ..\..\src\app\api\reports\[id]\route.ts
{
  const handler = {} as typeof import("..\\..\\src\\app\\api\\reports\\[id]\\route.js")
  handler satisfies RouteHandlerConfig<"/api/reports/[id]">
}

// Validate ..\..\src\app\api\reports\route.ts
{
  const handler = {} as typeof import("..\\..\\src\\app\\api\\reports\\route.js")
  handler satisfies RouteHandlerConfig<"/api/reports">
}

// Validate ..\..\src\app\api\suppliers\[id]\route.ts
{
  const handler = {} as typeof import("..\\..\\src\\app\\api\\suppliers\\[id]\\route.js")
  handler satisfies RouteHandlerConfig<"/api/suppliers/[id]">
}

// Validate ..\..\src\app\api\suppliers\route.ts
{
  const handler = {} as typeof import("..\\..\\src\\app\\api\\suppliers\\route.js")
  handler satisfies RouteHandlerConfig<"/api/suppliers">
}





// Validate ..\..\src\app\ai-insights\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\ai-insights\\layout.js")
  handler satisfies LayoutConfig<"/ai-insights">
}

// Validate ..\..\src\app\calendar\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\calendar\\layout.js")
  handler satisfies LayoutConfig<"/calendar">
}

// Validate ..\..\src\app\customers\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\customers\\layout.js")
  handler satisfies LayoutConfig<"/customers">
}

// Validate ..\..\src\app\dashboard\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\dashboard\\layout.js")
  handler satisfies LayoutConfig<"/dashboard">
}

// Validate ..\..\src\app\finance\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\finance\\layout.js")
  handler satisfies LayoutConfig<"/finance">
}

// Validate ..\..\src\app\inventory\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\inventory\\layout.js")
  handler satisfies LayoutConfig<"/inventory">
}

// Validate ..\..\src\app\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ..\..\src\app\reports\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\reports\\layout.js")
  handler satisfies LayoutConfig<"/reports">
}

// Validate ..\..\src\app\sales\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\sales\\layout.js")
  handler satisfies LayoutConfig<"/sales">
}

// Validate ..\..\src\app\settings\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\settings\\layout.js")
  handler satisfies LayoutConfig<"/settings">
}

// Validate ..\..\src\app\suppliers\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\suppliers\\layout.js")
  handler satisfies LayoutConfig<"/suppliers">
}

// Validate ..\..\src\app\todo\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\todo\\layout.js")
  handler satisfies LayoutConfig<"/todo">
}

// Validate ..\..\src\app\tools\gmail\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\tools\\gmail\\layout.js")
  handler satisfies LayoutConfig<"/tools/gmail">
}

// Validate ..\..\src\app\tools\hubtrack\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\tools\\hubtrack\\layout.js")
  handler satisfies LayoutConfig<"/tools/hubtrack">
}

// Validate ..\..\src\app\tools\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\tools\\layout.js")
  handler satisfies LayoutConfig<"/tools">
}

// Validate ..\..\src\app\tools\whatsapp\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\tools\\whatsapp\\layout.js")
  handler satisfies LayoutConfig<"/tools/whatsapp">
}
